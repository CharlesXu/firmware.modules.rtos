<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN"
  "/usr/share/xml/docbook/schema/dtd/4.4/docbookx.dtd">
 
<book>

<bookinfo>
	<title>FreeOSEK Manual</title>
	<authorgroup>
		<author>
			<firstname>Mariano</firstname>
			<surname>Cerdeiro</surname>
			<email>cerdeiro@users.sourceforge.net</email>
		</author>
	</authorgroup>
	<date>31/05/2009</date>
	<releaseinfo>0.1.0</releaseinfo>

	<abstract>
		<para><application>FreeOSEK</application> is a scalable software solution for embedded software which main part is
		the FreeOSEK RTOS based on OSEK-VDX RTOS specification. OSEK-VDX RTOS standard has been used successfully for more
		than a decade in the car industry.</para>
		<para>FreeOSEK is a static configurable system where only the needed resources are created. This feature improves not
		only the RAM/ROM consumption but the runtime and real time characteristics, as well. For example usually you may need
		between 2 - 10 kB for the FreeOSEK RTOS, which may vary according to the platform, compiler, compiler options,
		configuration, etc. This makes FreeOSEK best suitable for small and fast real time embedded systems.</para>
	</abstract>

	<keywordset>
		<keyword>osek</keyword>
		<keyword>open source osek</keyword>
		<keyword>free osek</keyword>
		<keyword>FreeOSEK</keyword>
	</keywordset>

	<copyright>
		<year>2008, 2009</year>
		<holder>The FreeOSEK Team -
		<ulink url="http://opensek.sourceforge.net">http://opensek.sourceforge.net</ulink>.</holder>
	</copyright>
</bookinfo>

<glossary>
	<glossentry id="osek"><glossterm>OSEK</glossterm>
		<acronym>OSEK</acronym>
		<glossdef>
			<para>Open Systems and their Interfaces for the Electronics in Motor Vehicles from german
			(Offene Systeme und deren Schnittstellen f&uuml;r die Elektronik in Kraftfahrzeugen)</para>
			<!--glossseealso otherterm="osek-vdx">OSEK-VDX</glossseealso-->
		</glossdef>
	</glossentry>

	<glossentry id="osek-vdx"><glossterm>OSEK-VDX</glossterm>
		<glosssee otherterm="osek"/>
	</glossentry>
</glossary>

<chapter>
	<title>Introduction</title>

	<para>FreeOSEK is a RTOS (Real Tiem Operating System) based on the OSEK-VDX OS specification.</para>

	<table>
		<title>Documents history</title>
		<tgroup cols="4">
			<thead>
				<row>
					<entry>Date</entry>
					<entry>Version</entry>
					<entry>Author</entry>
					<entry>Changes</entry>
				</row>
			</thead>
			<tbody>
				<row>
					<entry>31.05.2009</entry>
					<entry>0.1.0</entry>
					<entry>Mariano Cerdeiro</entry>
					<entry>initial version</entry>
				</row>
			</tbody>
		</tgroup>
	</table>


</chapter>

<chapter>
	<title>Getting Started</title>
		<sect1>
		<title>Getting FreeOSEK</title>
			<para>You can download</para>

		</sect1>
		<sect1>
		<title>Installing FreeOSEK on unix-like system</title>

			<para></para>
		</sect1>
</chapter>

<chapter>
	<title>FAQ</title>
	<qandaset>
		<qandaentry>
			<question>
				<para>What is FreeOSEK?</para>
			</question>
			<answer>
				<para>FreeOSEK is a scalable RTOS for embedded systems based on OSEK-VDX specification.
				OSEK-VDX RTOS standard has been used successfully for more than a decade in the car industry.</para>
				<para>FreeOSEK is a static configurable RTOS where only the needed resources are created. This
				feature improves not only the RAM/ROM consumption but the runtime and real time characteristics,
				as well. For example usually you may need between 2 - 10 kB for the FreeOSEK RTOS, which may vary
				according to the platform, compiler, compiler options, configuration, etc. This makes FreeOSEK best
				suitable for small and fast real time embedded systems.</para>
			</answer>
		</qandaentry>
		<qandaentry>
			<question>
				<para>Can I use FreeOSEK for commercial purposes?</para>
			</question>
			<answer>
				<para>Yes, you can use FreeOSEK for commercial purposes and distribute your code with a different
				licensing type other than GPL v3. FreeOSEK is released as GPL3 with Link Exception.</para>
			</answer>
		</qandaentry>
	</qandaset>
</chapter>

<chapter>
	<title>Make Envoronment</title>

	<para></para>
</chapter>

<chapter>	
	<title>FreeOSEK RTOS</title>
	<sect1>
		<title>Introduction</title>
		
		<para>FreeOSEK RTOS is a free and open source implementation of the Real Time Operating System specified
		by OSEK-VDX. The phylosophy of this RTOS is to provide a system with standardised interfaces, scalabilty,
		standard error checking mechanismus and portable.</para>

		<sect2>
			<title>Run Levels</title>

			<para>FreeOSEK provides two types of run levels:</para>
			<itemizedlist>
				<listitem><para>Task level</para></listitem>
				<listitem><para>ISR level</para></listitem>
			</itemizedlist>
		</sect2>
	</sect1>
	<sect1>
		<title>Data type</title>

		<para></para>		
	</sect1>
	<sect1>
		<title>Services</title>

		<para></para>

		<funcsynopsis>
			<funcsynopsisinfo>#include "os.h"</funcsynopsisinfo>
			<funcprototype>
				<funcdef>StatusType <function>ActivateTask</function></funcdef>
				<paramdef>TaskType<parameter>TaskID</parameter></paramdef>
				<!--para>This system service activates the task with the ID indicated in the TaskID parameter.</para>
				<para>This service can be used to activate any FreeOSEK Tasks. By the activation the task will be transfered from the suspended to the ready state. Basic tasks may be activated more tha one time, if configured. A second or n activation puts the task for a second or n time on the ready list. A maximal count of activation shall be defined on the OIL configuration for every basic tasks. Extended task can only be activated ones.

FreeOSEK generates macros with the names of the tasks as defined on the on the OIL configuration.

Rescheduling takes place before returning. Activating a higher priority task preemts the running task (only if preemtable) and start the activated task.

This function may return E_OK or E_OS_LIMIT in standard mode. Extra in extended mode E_OS_ID may be returned.

If the return code is other than E_OK, the ErrorHook is enable, and ErrorHook is not beeing executed the ErrorHook function will be called.</para-->
			</funcprototype>
		</funcsynopsis>

	</sect1>
	<sect1>
		<title>Platform specific implementation</title>
		<sect2>
			<title>FreeOSEK RTOS on POSIX Systems</title>

			<para></para>
		</sect2>
		<sect2>
			<title>FreeOSEK RTOS on Windows</title>

			<para></para>
		</sect2>
		<sect2>
			<title>FreeOSEK RTOS on arm7</title>

			<para></para>
		</sect2>
		<sect2>
			<title>Porting FreeOSEK RTOS to new architectures</title>

			<para></para>
		</sect2>
	</sect1>
</chapter>
</book>


