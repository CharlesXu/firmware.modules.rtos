OSEK OSEK {

OS	ExampleOS {
	STATUS = EXTENDED;
   STARTUPHOOK = FALSE;
   ERRORHOOK = FALSE;
   SHUTDOWNHOOK = FALSE;
	PRETASKHOOK = FALSE;
	POSTTASKHOOK = FALSE;
	USERESSCHEDULER = FALSE;
	MEMMAP = FALSE;
};

TASK InitTask {
   PRIORITY = 1;
   SCHEDULE = NON;
   ACTIVATION = 1;
   AUTOSTART = TRUE {
      APPMODE = AppMode1;
      };
   STACK = 128;
   TYPE = EXTENDED;
};

TASK LedsTask {
   PRIORITY = 2;
   SCHEDULE = NON;
   ACTIVATION = 1;
   AUTOSTART = FALSE;
	STACK = 64;
	TYPE = BASIC;
	MESSAGE = MessageButtons;
};

TASK ButtonsTask {
	PRIORITY = 3;
	SCHEDULE = NON;
	ACTIVATION = 1;
	AUTOSTART = FALSE;
	STACK = 64;
	TYPE = BASIC;
}

APPMODE AppMode1;

COUNTER HardwareCounter {
	MAXALLOWEDVALUE = 100000;
	TICKSPERBASE = 1000;
	MINCYCLE = 1;
	TYPE = HARDWARE;
	COUNTER = HWCOUNTER0;
};

COUNTER SoftwareCounter {
	MAXALLOWEDVALUE = 100000;
	TICKSPERBASE = 100;
	MINCYCLE = 1;
	TYPE = SOFTWARE;
};

ALARM IncrementSWCounter {
	COUNTER = HardwareCounter;
	ACTION = INCREMENT {
		COUNTER = SoftwareCounter;
	};
	AUTOSTART = TRUE {
		APPMODE = AppMode1;
		ALARMTIME = 1;
		CYCLETIME = 1;
	};
};

ALARM ActivateLedsTask {
	COUNTER = SoftwareCounter;
	ACTION = ACTIVATETASK {
		TASK = LedsTask;
	}
	AUTOSTART = FALSE;
};

ALARM ActivateButtonsTask {
	COUNTER = SoftwareCounter;
	ACTION = ACTIVATETASK {
		TASK = ButtonsTask;
	}
	AUTOSTART = FALSE;
};

// MESSAGE MessageButtons {
// 	MESSAGEPROPERTY = SEND_STATIC_INTERNAL {
// 		CDATATYPE = unsigned char;
// 	};
// 	NOTIFICATION = 
// 	NOTIFICATIONERROR = 
// };

};

COM COM {

	COM Example {
		COMTIMEBASE = 0.001;
		COMERRORHOOK = TRUE;
		COMUSEGETSERVICEID = TRUE;
		COMUSEPARAMETERACCESS = TRUE;
		COMSTARTCOMEXTENSION = DISABLE;
		COMAPPMODE = Com_ApplMode1;
		COMSTATUS = COMEXTENDED;
		USE = "networkfile.oil";
	};

	MESSAGE RPM {
		MESSAGEPROPERTY = SEND_STATIC_EXTERNAL {
			SIZEINBITS = 14;
			TRANSFERPROPERTY = PENDING;
			NOTIFICATION = NONE;
			INITIALVALUE = 20;
			NETWORKMESSAGE = NetRPM;
		};
	};

	MESSAGE TORQUE {
		MESSAGEPROPERTY = SEND_STATIC_EXTERNAL {
			SIZEINBITS = 10;
			TRANSFERPROPERTY = PENDING;
			NOTIFICATION = NONE;
			INITIALVALUE = 0;
			NETWORKMESSAGE = NetTORQUE;
		};
	};

	MESSAGE SPEED {
		MESSAGEPROPERTY = SEND_STATIC_EXTERNAL {
			SIZEINBITS = 11;
			TRANSFERPROPERTY = PENDING;
			NOTIFICATION = NONE;
			INITIALVALUE = 10;
			NETWORKMESSAGE = NetSPEED;
		};
	};

	MESSAGE GEAR {
		MESSAGEPROPERTY = SEND_STATIC_EXTERNAL {
			SIZEINBITS = 4;
			TRANSFERPROPERTY = PENDING;
			NOTIFICATION = NONE;
			INITIALVALUE = 0;
			NETWORKMESSAGE = NetGEAR;
		};
	};

	NETWORKMESSAGE NetRPM {
		IPDU = PduCAR;
		MESSAGEPROPERTY = STATIC {
			SIZEINBITS = 14;
			BITORDERING = BIGENDIAN;
			BITPOSITION = 0;
			DATAINTERPRETATION = UNSIGNEDINTEGER;
			INITIALVALUE = 0;
			DIRECTION = SENT {
				TRANSFERPROPERTY = AUTO;
			};
		};
	};

	NETWORKMESSAGE NetTORQUE {
		IPDU = PduCAR;
		MESSAGEPROPERTY = STATIC {
			SIZEINBITS = 10;
			BITORDERING = BIGENDIAN;
			BITPOSITION = 14;
			DATAINTERPRETATION = UNSIGNEDINTEGER;
			INITIALVALUE = 0;
			DIRECTION = SENT {
				TRANSFERPROPERTY = AUTO;
			};
		};
	};

	NETWORKMESSAGE NetSPEED {
		IPDU = PduCAR;
		MESSAGEPROPERTY = STATIC {
			SIZEINBITS = 11;
			BITORDERING = BIGENDIAN;
			BITPOSITION = 24;
			DATAINTERPRETATION = UNSIGNEDINTEGER;
			INITIALVALUE = 0;
			DIRECTION = SENT {
				TRANSFERPROPERTY = AUTO;
			};
		};
	};

	NETWORKMESSAGE NetGEAR {
		IPDU = PduCAR;
		MESSAGEPROPERTY = STATIC {
			SIZEINBITS = 4;
			BITORDERING = BIGENDIAN;
			BITPOSITION = 35;
			DATAINTERPRETATION = UNSIGNEDINTEGER;
			INITIALVALUE = 0;
			DIRECTION = SENT {
				TRANSFERPROPERTY = AUTO;
			};
		};
	};


	IPDU PduCAR {
		SIZEINBITS = 64;
		IPDUPROPERTY = SENT {
			TRANSMISSIONMODE = PERIODIC;
		};
		TIMEPERIOD = 10;
		TIMEOFFSET = 0;
		MINIMUMDELAY = 10;
		TIMEOUT = 10;
		LAYERUSED = TCP {
			CHANNEL = 0;
		}
	};

};

// MESSAGE MessageButtons {
// 	MESSAGEPROPERTY = [ SEND_STATIC_INTERNAL |
// 							SEND_STATIC_EXTERNAL |
// 							SEND_ZERO_INTERNAL |
// 							SEND_ZERO_EXTERNAL |
// 							RECEIVE_ZERO_INTERNAL |
// 							RECEIVE_ZERO_EXTERNAL |
// 							RECEIVE_UNQUEUED_INTERNAL |
// 							RECEIVE_UNQUEUED_EXTERNAL ] {
// 		CDATATYPE = [ c type ];
// 		TRANSFERPROPERTY = [ TRIGGERED | PENDING | AUTO ];
// 		NETWORKMESSAGE = [ network message ];
// 		INITIALVALUE = [ init value for this message ];
// 		SENDINGMESSAGE = [ for receiver the message of the internal sending message ];
// 	};
// 	NOTIFICATION = [ NONE | ACTIVATETASK | SETEVENT | COMCALLBACK | FLAG ] {
// 	};
// };
// NETWORKMESSAGE MessageButtons {
// 	IPDU = name;
// 	MESSAGEPROPERTY = STATIC {
// 		SIZEINBITS = [ 1 .. 2xx32-1];
// 		BITORDERING = [ BIGENDIAN | LITTLEENDIAN ];
// 		BITPOSITION = [ 0 .. 2xx32-1];
// 		DATAINTERPRETATION = [ UNSIGNEDINTEGER | BYTEARRAY ];
// 		INITIALVALUE = [ 0 .. 2xx64-1];
// 		DIRECTION = SENT {
// 			TRANSFERPROPERTY = [ TRIGGERED | PENDING | AUTO ];
// 		};
// 		DIRECTION = RECEIVED;
// 	};
// };
// IPDU IPDUName {
// 	SIZEINBITS = [ 1 .. 2xx32-1 ];
// 	IPDUPROPERTY = [ SENT | RECEIVED ] {
// 		TRANSMISSIONMODE = [ PERIODIC | DIRECT | MIXED ];
// 	};
// 	TIMEPERIOD = [ 1 .. 2xx64-1 ];
// 	TIMEOFFSET = [ 0 .. 2xx64-1 ];
// 	MINIMUMDELAY = [ 0 .. 2xx64-1 ];
// 	TIMEOUT = [ 0 .. 2xx64-1 ];
// 	LAYERUSED = [ CAN | TCP | UDP | FLRY ] {
// 		CHANNEL = [ channel name ];
// 	};
// };
